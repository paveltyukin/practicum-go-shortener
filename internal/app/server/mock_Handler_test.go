// Code generated by mockery v2.16.0. DO NOT EDIT.

package server

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// MockHandler is an autogenerated mock type for the Handler type
type MockHandler struct {
	mock.Mock
}

// ServeHTTP provides a mock function with given fields: w, r
func (_m *MockHandler) ServeHTTP(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// getHandler provides a mock function with given fields: w, r
func (_m *MockHandler) getHandler(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// postHandler provides a mock function with given fields: w, r
func (_m *MockHandler) postHandler(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

type mockConstructorTestingTNewMockHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockHandler creates a new instance of MockHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockHandler(t mockConstructorTestingTNewMockHandler) *MockHandler {
	mock := &MockHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
